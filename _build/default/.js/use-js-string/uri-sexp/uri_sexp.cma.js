// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.9.1

//# unitInfo: Provides: Uri_sexp
//# unitInfo: Requires: Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_error, Sexplib0__Sexp_conv_record, Uri
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst = "",
    cst_Authority = "Authority",
    cst_Custom = "Custom",
    cst_Fragment = "Fragment",
    cst_Generic = "Generic",
    cst_Host = "Host",
    cst_Path = "Path",
    cst_Query = "Query",
    cst_Query_key = "Query_key",
    cst_Query_value = "Query_value",
    cst_Scheme = "Scheme",
    cst_Userinfo = "Userinfo",
    cst_fragment$0 = "fragment",
    cst_host$0 = "host",
    cst_lib_sexp_uri_sexp_ml_Deriv = "lib_sexp/uri_sexp.ml.Derived.component",
    cst_path$0 = "path",
    cst_port$0 = "port",
    cst_query$0 = "query",
    cst_scheme$0 = "scheme",
    cst_userinfo$0 = "userinfo",
    caml_equal = runtime.caml_equal,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_string_compare = runtime.caml_string_compare,
    caml_update_dummy = runtime.caml_update_dummy,
    caml_wrap_exception = runtime.caml_wrap_exception;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) === 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   function caml_call8(f, a0, a1, a2, a3, a4, a5, a6, a7){
    return (f.l >= 0 ? f.l : f.l = f.length) === 8
            ? f(a0, a1, a2, a3, a4, a5, a6, a7)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    error_source_006 = cst_lib_sexp_uri_sexp_ml_Deriv,
    error_source_018 = cst_lib_sexp_uri_sexp_ml_Deriv,
    default_034 = cst,
    error_source_027 = "lib_sexp/uri_sexp.ml.Derived.t",
    default_062 = cst,
    Uri = global_data.Uri,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Sexplib0_Sexp_conv_record = global_data.Sexplib0__Sexp_conv_record,
    _a_ = [],
    letrec_function_context = [];
   function component_of_sexp(sexp_017){
    try{
     a:
     if(0 === sexp_017[0]){
      var
       atom_002 = sexp_017[1],
       switch$0 = caml_string_compare(atom_002, cst_Path);
      if(0 <= switch$0){
       if(0 >= switch$0){var _M_ = 892015045; break a;}
       if(atom_002 === cst_Query){var _M_ = -250086680; break a;}
       if(atom_002 === cst_Query_key){var _M_ = -911188600; break a;}
       if(atom_002 === cst_Query_value){var _M_ = 795008922; break a;}
       if(atom_002 === cst_Scheme){var _M_ = -178940859; break a;}
       if(atom_002 === cst_Userinfo){var _M_ = -145160103; break a;}
      }
      else{
       if(atom_002 === cst_Authority){var _M_ = -715788189; break a;}
       if(atom_002 === cst_Custom){
        var _M_ = caml_call2(Sexplib0_Sexp_conv_error[27], _a_[1], sexp_017);
        break a;
       }
       if(atom_002 === cst_Fragment){var _M_ = 127343600; break a;}
       if(atom_002 === cst_Generic){var _M_ = 61643255; break a;}
       if(atom_002 === cst_Host){var _M_ = 803994504; break a;}
      }
      var _M_ = caml_call1(Sexplib0_Sexp_conv_error[23], 0);
     }
     else{
      var _H_ = sexp_017[1];
      if(_H_){
       var match = _H_[1];
       if(0 === match[0]){
        var
         sexp_args_005 = _H_[2],
         atom_002$0 = match[1],
         switch$1 = caml_string_compare(atom_002$0, cst_Path);
        if(0 <= switch$1){
         if
          (0 >= switch$1
           ||
            atom_002$0 === cst_Query
            ||
             atom_002$0 === cst_Query_key
             ||
              atom_002$0 === cst_Query_value
              || atom_002$0 === cst_Scheme || atom_002$0 === cst_Userinfo){
          var
           _M_ = caml_call2(Sexplib0_Sexp_conv_error[25], _a_[1], sexp_017);
          break a;
         }
        }
        else{
         if(atom_002$0 === cst_Authority){
          var
           _M_ = caml_call2(Sexplib0_Sexp_conv_error[25], _a_[1], sexp_017);
          break a;
         }
         if(atom_002$0 === cst_Custom){
          if(sexp_args_005 && ! sexp_args_005[2]){
           var arg0_015 = sexp_args_005[1];
           b:
           {
            if(1 === arg0_015[0]){
             var _I_ = arg0_015[1];
             if(_I_){
              var _J_ = _I_[2];
              if(_J_){
               var _K_ = _J_[2];
               if(_K_ && ! _K_[2]){
                var
                 arg2_010 = _K_[1],
                 arg1_009 = _J_[1],
                 arg0_008 = _I_[1],
                 res0_011 = component_of_sexp(arg0_008),
                 res1_012 = caml_call1(Sexplib0_Sexp_conv[31], arg1_009),
                 res2_013 = caml_call1(Sexplib0_Sexp_conv[31], arg2_010),
                 res0_016 = [0, res0_011, res1_012, res2_013];
                break b;
               }
              }
             }
            }
            var
             res0_016 =
               caml_call3(Sexplib0_Sexp_conv_error[4], _a_[1], 3, arg0_015);
           }
           var _M_ = [0, -198771759, res0_016];
           break a;
          }
          var
           _M_ =
             caml_call3
              (Sexplib0_Sexp_conv_error[26], _a_[1], atom_002$0, sexp_017);
          break a;
         }
         if
          (atom_002$0 === cst_Fragment
           || atom_002$0 === cst_Generic || atom_002$0 === cst_Host){
          var
           _M_ = caml_call2(Sexplib0_Sexp_conv_error[25], _a_[1], sexp_017);
          break a;
         }
        }
        var _M_ = caml_call1(Sexplib0_Sexp_conv_error[23], 0);
       }
       else
        var _M_ = caml_call2(Sexplib0_Sexp_conv_error[28], _a_[1], sexp_017);
      }
      else
       var _M_ = caml_call2(Sexplib0_Sexp_conv_error[29], _a_[1], sexp_017);
     }
     return _M_;
    }
    catch(_N_){
     var _L_ = caml_wrap_exception(_N_);
     if(_L_ === Sexplib0_Sexp_conv_error[22])
      return caml_call2
              (Sexplib0_Sexp_conv_error[24],
               letrec_function_context[1],
               sexp_017);
     throw caml_maybe_attach_backtrace(_L_, 0);
    }
   }
   caml_update_dummy(_a_, [0, error_source_006]);
   caml_update_dummy(letrec_function_context, [0, error_source_018]);
   var
    _b_ = [0, cst_Fragment],
    _c_ = [0, cst_Path],
    _d_ = [0, cst_Host],
    _e_ = [0, cst_Query_value],
    _f_ = [0, cst_Generic],
    _g_ = [0, cst_Authority],
    _h_ = [0, cst_Userinfo],
    _i_ = [0, cst_Scheme],
    _j_ = [0, cst_Query],
    _k_ = [0, cst_Query_key],
    _l_ = [0, cst_Custom];
   function sexp_of_component(param){
    if(typeof param === "number")
     return 61643255 <= param
             ? 127343600
               === param
               ? _b_
               : 803994504
                 <= param
                 ? 892015045 <= param ? _c_ : _d_
                 : 795008922 <= param ? _e_ : _f_
             : -715788189
               === param
               ? _g_
               : -178940859
                 <= param
                 ? -145160103 <= param ? _h_ : _i_
                 : -250086680 <= param ? _j_ : _k_;
    var
     v_019 = param[2],
     arg2_022 = v_019[3],
     arg1_021 = v_019[2],
     arg0_020 = v_019[1],
     res0_023 = sexp_of_component(arg0_020),
     res1_024 = caml_call1(Sexplib0_Sexp_conv[7], arg1_021),
     res2_025 = caml_call1(Sexplib0_Sexp_conv[7], arg2_022);
    return [1,
            [0,
             _l_,
             [0, [1, [0, res0_023, [0, res1_024, [0, res2_025, 0]]]], 0]]];
   }
   var
    default_028 = 0,
    default_035 = 0,
    default_036 = 0,
    default_037 = 0,
    default_038 = 0,
    cst_fragment = cst_fragment$0,
    cst_query = cst_query$0,
    cst_path = cst_path$0,
    cst_port = cst_port$0,
    cst_host = cst_host$0,
    cst_userinfo = cst_userinfo$0,
    cst_scheme = cst_scheme$0,
    default_042 = 0,
    default_047 = 0,
    default_052 = 0,
    default_057 = 0,
    default_075 = 0,
    _m_ = [0, cst_scheme$0],
    _n_ = [0, cst_userinfo$0],
    _o_ = [0, cst_host$0],
    _p_ = [0, cst_port$0],
    _q_ = [0, cst_path$0],
    _r_ = [0, cst_query$0],
    _s_ = [0, cst_fragment$0];
   function t_of_sexp(x_039){
    var
     _u_ =
       [0,
        cst_query,
        4,
        function(sexp_033){
         if(1 === sexp_033[0]){
          var _F_ = sexp_033[1];
          if(_F_){
           var _G_ = _F_[2];
           if(_G_ && ! _G_[2]){
            var
             arg1_030 = _G_[1],
             arg0_029 = _F_[1],
             res0_031 = caml_call1(Sexplib0_Sexp_conv[31], arg0_029),
             res1_032 =
               caml_call2
                (Sexplib0_Sexp_conv[44], Sexplib0_Sexp_conv[31], arg1_030);
            return [0, res0_031, res1_032];
           }
          }
         }
         return caml_call3
                 (Sexplib0_Sexp_conv_error[4], error_source_027, 2, sexp_033);
        },
        [0,
         cst_fragment,
         [0, function(param){return default_028;}],
         caml_call1(Sexplib0_Sexp_conv[41], Sexplib0_Sexp_conv[31]),
         0]],
     _v_ =
       [0,
        cst_path,
        [0, function(param){return default_034;}],
        Sexplib0_Sexp_conv[31],
        _u_],
     _w_ =
       [0,
        cst_port,
        [0, function(param){return default_035;}],
        caml_call1(Sexplib0_Sexp_conv[41], Sexplib0_Sexp_conv[34]),
        _v_],
     _x_ =
       [0,
        cst_host,
        [0, function(param){return default_036;}],
        caml_call1(Sexplib0_Sexp_conv[41], Sexplib0_Sexp_conv[31]),
        _w_],
     _y_ =
       [0,
        cst_userinfo,
        [0, function(param){return default_037;}],
        caml_call1(Sexplib0_Sexp_conv[41], Sexplib0_Sexp_conv[31]),
        _x_],
     _z_ =
       [0,
        cst_scheme,
        [0, function(param){return default_038;}],
        caml_call1(Sexplib0_Sexp_conv[41], Sexplib0_Sexp_conv[31]),
        _y_],
     t =
       caml_call6
        (Sexplib0_Sexp_conv_record[3],
         error_source_027,
         _z_,
         function(param){
          return param !== cst_fragment$0
                  ? param
                    !== cst_host$0
                    ? param
                      !== cst_path$0
                      ? param
                        !== cst_port$0
                        ? param
                          !== cst_query$0
                          ? param
                            !== cst_scheme$0
                            ? param !== cst_userinfo$0 ? -1 : 1
                            : 0
                          : 5
                        : 3
                      : 4
                    : 2
                  : 6;
         },
         0,
         function(param){
          var
           _A_ = param[2],
           _B_ = _A_[2],
           _C_ = _B_[2],
           _D_ = _C_[2],
           _E_ = _D_[2],
           fragment = _E_[2][1],
           query = _E_[1],
           path = _D_[1],
           port = _C_[1],
           host = _B_[1],
           userinfo = _A_[1],
           scheme = param[1];
          return [0, scheme, userinfo, host, port, path, query, fragment];
         },
         x_039);
    return caml_call8
            (Uri[11], t[1], t[2], t[3], t[4], [0, t[5]], [0, t[6]], t[7], 0);
   }
   function sexp_of_t(t){
    var
     fragment_076 = caml_call1(Uri[41], t),
     query_067 = caml_call1(Uri[13], t),
     path_063 = caml_call2(Uri[26], 0, t),
     port_058 = caml_call1(Uri[39], t),
     host_053 = caml_call1(Uri[36], t),
     userinfo_048 = caml_call2(Uri[31], 0, t),
     scheme_043 = caml_call1(Uri[29], t),
     bnds_040 = 0,
     arg_078 =
       caml_call1
        (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[7]),
         fragment_076);
    if
     (caml_equal
       (caml_call1
         (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[7]),
          default_075),
        arg_078))
     var bnds_040$0 = bnds_040;
    else
     var
      bnd_077 = [1, [0, _s_, [0, arg_078, 0]]],
      bnds_040$0 = [0, bnd_077, bnds_040];
    var _t_ = query_067 ? 0 : 1;
    if(_t_)
     var bnds_040$1 = bnds_040$0;
    else
     var
      arg_073 =
        caml_call1
         (caml_call1
           (Sexplib0_Sexp_conv[20],
            function(param){
             var
              arg1_069 = param[2],
              arg0_068 = param[1],
              res0_070 = caml_call1(Sexplib0_Sexp_conv[7], arg0_068),
              res1_071 =
                caml_call2
                 (Sexplib0_Sexp_conv[20], Sexplib0_Sexp_conv[7], arg1_069);
             return [1, [0, res0_070, [0, res1_071, 0]]];
            }),
          query_067),
      bnd_072 = [1, [0, _r_, [0, arg_073, 0]]],
      bnds_040$1 = [0, bnd_072, bnds_040$0];
    var arg_065 = caml_call1(Sexplib0_Sexp_conv[7], path_063);
    if(caml_equal(caml_call1(Sexplib0_Sexp_conv[7], default_062), arg_065))
     var bnds_040$2 = bnds_040$1;
    else
     var
      bnd_064 = [1, [0, _q_, [0, arg_065, 0]]],
      bnds_040$2 = [0, bnd_064, bnds_040$1];
    var
     arg_060 =
       caml_call1
        (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[10]), port_058);
    if
     (caml_equal
       (caml_call1
         (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[10]),
          default_057),
        arg_060))
     var bnds_040$3 = bnds_040$2;
    else
     var
      bnd_059 = [1, [0, _p_, [0, arg_060, 0]]],
      bnds_040$3 = [0, bnd_059, bnds_040$2];
    var
     arg_055 =
       caml_call1
        (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[7]), host_053);
    if
     (caml_equal
       (caml_call1
         (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[7]),
          default_052),
        arg_055))
     var bnds_040$4 = bnds_040$3;
    else
     var
      bnd_054 = [1, [0, _o_, [0, arg_055, 0]]],
      bnds_040$4 = [0, bnd_054, bnds_040$3];
    var
     arg_050 =
       caml_call1
        (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[7]),
         userinfo_048);
    if
     (caml_equal
       (caml_call1
         (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[7]),
          default_047),
        arg_050))
     var bnds_040$5 = bnds_040$4;
    else
     var
      bnd_049 = [1, [0, _n_, [0, arg_050, 0]]],
      bnds_040$5 = [0, bnd_049, bnds_040$4];
    var
     arg_045 =
       caml_call1
        (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[7]),
         scheme_043);
    if
     (caml_equal
       (caml_call1
         (caml_call1(Sexplib0_Sexp_conv[17], Sexplib0_Sexp_conv[7]),
          default_042),
        arg_045))
     var bnds_040$6 = bnds_040$5;
    else
     var
      bnd_044 = [1, [0, _m_, [0, arg_045, 0]]],
      bnds_040$6 = [0, bnd_044, bnds_040$5];
    return [1, bnds_040$6];
   }
   function compare(a, b){return caml_call2(Uri[2], a, b);}
   function equal(a, b){return caml_call2(Uri[3], a, b);}
   var
    Uri_sexp =
      [0,
       component_of_sexp,
       sexp_of_component,
       t_of_sexp,
       sexp_of_t,
       compare,
       equal];
   runtime.caml_register_global(63, Uri_sexp, "Uri_sexp");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
